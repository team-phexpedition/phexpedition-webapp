version: '3.8'

# Prefixing port numbers with 127.0.0.1: to avoid problems with firewall ufw.
# see https://www.peterspython.com/en/blog/docker-on-debian-ubuntu-not-respecting-ufw-firewall-settings-exposing-ports

volumes:
  caddy_data:
  portainer_data:

services:

  phexpedition:
    container_name: phexpedition
    image: bjblazko/phexpedition:latest
    env_file:
      - /phexpedition/phexpedition.env
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: library/postgres:12.4-alpine
    restart: always
    env_file:
      - /phexpedition/phexpedition.env
    volumes:
      - "/phexpedition/postgres/data:/var/lib/postgresql/data"
    ports:
      - "127.0.0.1:5432:5432"

  caddy:
    container_name: caddy
    image: caddy:2.1.1-alpine
    volumes:
      - /phexpedition/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
    ports:
      - 80:80
      - 443:443

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - portainer_data:/data portainer/portainer-ce
    ports:
      - "127.0.0.1:8000:8000"
      - "127.0.0.1:9000:9000"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    restart: always
    environment:
      - "discovery.type=single-node"
    volumes:
    - "/phexpedition/elastic/es:/usr/share/elasticsearch/data"
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.10.0
    restart: always
    environment:
      - "SERVER_NAME=beta-kibana.phexpedition.net"
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
    ports:
      - "127.0.0.1:5601:5601"
    depends_on:
      - elasticsearch

  filebeat:
    container_name: filebeat
    image: "docker.elastic.co/beats/filebeat:7.10.0"
    user: root
    volumes:
      - "/phexpedition/elastic/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - "/phexpedition/prometheus:/etc/prometheus"
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - "/phexpedition/grafana:/var/lib/grafana"
    ports:
      - "3000:3000"

  postgres-prometheus-exporter:
    container_name: postgres-prometheus-exporter
    image: wrouesnel/postgres_exporter
    env_file:
      - /phexpedition/phexpedition.env
    depends_on:
      - postgres

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor
    ports:
      - "3535:8080"
    privileged: true
    devices:
      - "/dev/kmsg"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
