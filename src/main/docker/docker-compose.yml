version: '3.8'

volumes:
  caddy_data:
  portainer_data:

services:

  phexpedition:
    container_name: phexpedition
    image: bjblazko/phexpedition:latest
    env_file:
      - /phexpedition/phexpedition.env
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: library/postgres:12.4-alpine
    restart: always
    env_file:
      - /phexpedition/phexpedition.env
    volumes:
      - "/phexpedition/postgres/data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"

  caddy:
    image: caddy:2.1.1-alpine
    volumes:
      - /phexpedition/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
    ports:
      - 80:80
      - 443:443

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - portainer_data:/data portainer/portainer-ce
    ports:
      - "8000:8000"
      - "9000:9000"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    restart: always
    environment:
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.10.0
    restart: always
    environment:
      - "elasticsearch.hosts=http://elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  filebeat:
    image: "docker.elastic.co/beats/filebeat:7.10.0"
    user: root
    volumes:
      - /phexpedition/elastic/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
