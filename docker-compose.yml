version: '3.8'

volumes:
  portainer_data:

services:

#  phexpedition:
#    container_name: phexpedition
#    image: bjblazko/phexpedition:latest
#    environment:
#    - 'quarkus.banner.enabled=false'
#    - 'quarkus.log.console.json=true'
#    - 'quarkus.log.level=INFO'
#    - 'quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/phexpedition'
#    - 'quarkus.datasource.username=phexpedition'
#    - 'quarkus.datasource.password=test'
#    ports:
#    - "8080:8080"
#    depends_on:
#      - postgres

  postgres:
    container_name: postgres
    image: library/postgres:12.4-alpine
    restart: always
    environment:
      POSTGRES_DB: phexpedition
      POSTGRES_USER: phexpedition
      POSTGRES_PASSWORD: test
    ports:
    - "5432:5432"

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    - portainer_data:/data portainer/portainer-ce
    ports:
    - "8000:8000"
    - "9000:9000"

  # check with:
  # http://localhost:9090/targets
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  # When running, install these dashboards:
  # JVM Micrometer: https://grafana.com/grafana/dashboards/4701
  # PostgreSQL:     https://grafana.com/grafana/dashboards/455
  #                 https://grafana.com/grafana/dashboards/9628
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
    - ./prometheus:/var/lib/grafana
    ports:
    - "3000:3000"

  postgres-prometheus-exporter:
    container_name: postgres-prometheus-exporter
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://phexpedition:test@postgres:5432/phexpedition?sslmode=disable"
    depends_on:
      - postgres

