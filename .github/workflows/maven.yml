# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
# Maven/Cache/Docker stuff taken from https://medium.com/@alexander.volminger/ci-cd-for-java-maven-using-github-actions-d009a7cb4b8f

name: Java CI with Maven

on:
  push:
    branches: [ stable ]
  pull_request:
    branches: [ stable ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v2.1.1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Verify project (Maven)
      run: mvn -B clean verify -DskipTests
    - name: Compile project (Maven)
      run: mvn -B compile -DskipTests
    - name: Unit tests
      run: mvn -B test
  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/webapp-*runner.jar staging/phexpedition-webapp.jar
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging
      - name: Docker - build image
        run: docker build --tag ${{ secrets.DOCKER_REPO }}:$GITHUB_RUN_NUMBER --tag ${{ secrets.DOCKER_REPO }}:latest --file src/main/docker/Dockerfile.jvm .
      - name: Docker - login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker - upload to repository
        run: docker push ${{ secrets.DOCKER_REPO }}
